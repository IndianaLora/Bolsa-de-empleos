[{"C:\\Users\\indiana\\Documents\\code\\BolsaEmpleos\\frontend\\src\\index.js":"1","C:\\Users\\indiana\\Documents\\code\\BolsaEmpleos\\frontend\\src\\components\\navbar\\navbar.js":"2","C:\\Users\\indiana\\Documents\\code\\BolsaEmpleos\\frontend\\src\\App.js":"3","C:\\Users\\indiana\\Documents\\code\\BolsaEmpleos\\frontend\\src\\container.js":"4","C:\\Users\\indiana\\Documents\\code\\BolsaEmpleos\\frontend\\src\\components\\navbar\\sideBar.js":"5","C:\\Users\\indiana\\Documents\\code\\BolsaEmpleos\\frontend\\src\\components\\busqueda\\Busqueda.js":"6","C:\\Users\\indiana\\Documents\\code\\BolsaEmpleos\\frontend\\src\\components\\users\\login.js":"7","C:\\Users\\indiana\\Documents\\code\\BolsaEmpleos\\frontend\\src\\components\\users\\registro.js":"8","C:\\Users\\indiana\\Documents\\code\\BolsaEmpleos\\frontend\\src\\components\\morejobs\\morejobs.js":"9","C:\\Users\\indiana\\Documents\\code\\BolsaEmpleos\\frontend\\src\\components\\morejobs\\moreJobs.js":"10"},{"size":391,"mtime":1614731877923,"results":"11","hashOfConfig":"12"},{"size":1196,"mtime":1614650336148,"results":"13","hashOfConfig":"12"},{"size":1722,"mtime":1614735643865,"results":"14","hashOfConfig":"12"},{"size":4036,"mtime":1614720596118,"results":"15","hashOfConfig":"12"},{"size":315,"mtime":1614718227304,"results":"16","hashOfConfig":"12"},{"size":3120,"mtime":1614736839058,"results":"17","hashOfConfig":"12"},{"size":2614,"mtime":1614720402501,"results":"18","hashOfConfig":"12"},{"size":1746,"mtime":1614607164259,"results":"19","hashOfConfig":"12"},{"size":1968,"mtime":1614556398156,"results":"20","hashOfConfig":"12"},{"size":1968,"mtime":1614556398156,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"5qui8s",{"filePath":"24","messages":"25","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26","usedDeprecatedRules":"27"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"27"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"27"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"38","messages":"39","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"27"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},"C:\\Users\\indiana\\Documents\\code\\BolsaEmpleos\\frontend\\src\\index.js",["47","48"],"C:\\Users\\indiana\\Documents\\code\\BolsaEmpleos\\frontend\\src\\components\\navbar\\navbar.js",["49","50","51"],"import React, { useState } from \"react\";\r\nimport \"./navbar.css\";\r\nimport { FaBullhorn, FaLongArrowAltLeft } from \"react-icons/fa\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { sidebarData } from \"./sideBar\";\r\n\r\nfunction Navbar() {\r\n  const [sidebar, setSidebar] = useState(false);\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"navbar\">\r\n        <nav className={sidebar ? \"nav-menu active\" : \"nav-menu\"}>\r\n          <ul className=\"nav-menu-items\">\r\n            <a className=\"navbar-brand\" href=\"#\">\r\n              <Link className=\"menu-bars\">\r\n                <FaBullhorn />\r\n              </Link>\r\n              Empleos <strong id=\"red\">R</strong>\r\n              <strong id=\"blue\">D</strong>\r\n            </a>\r\n            {sidebarData.map((item, index) => {\r\n              return (\r\n                <li key={index} className={item.className}>\r\n                  <Link to={item.path}>\r\n                    <span>{item.tittle}</span>\r\n                  </Link>\r\n                </li>\r\n              );\r\n            })}\r\n          </ul>\r\n        </nav>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nexport default Navbar;\r\n",["52","53"],"C:\\Users\\indiana\\Documents\\code\\BolsaEmpleos\\frontend\\src\\App.js",[],"C:\\Users\\indiana\\Documents\\code\\BolsaEmpleos\\frontend\\src\\container.js",["54","55","56"],"import React, { useState, useEffect, useContext } from \"react\";\r\n\r\nimport { UserContext } from \"./App\"; //named export\r\nimport { useForm } from \"react-hook-form\";\r\nimport { message, Button } from \"antd\";\r\n\r\nimport axios from \"axios\";\r\nimport \"./Form.css\";\r\n\r\nexport default function Container() {\r\n  const { register, handleSubmit, errors } = useForm();\r\n  const [jobType, setJobtype] = useState();\r\n  const [jobs, setJobs] = useState();\r\n  const [jobCategories, setJobCategories] = useState();\r\n\r\n  const user = useContext(UserContext);\r\n  console.log(user);\r\n\r\n  useEffect(() => {\r\n    axios.get(\"http://localhost:3001/api/job-categories\").then((response) => {\r\n      setJobCategories(response.data);\r\n    });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    axios.get(\"http://localhost:3001/api/job-types\").then((response) => {\r\n      setJobtype(response.data);\r\n    });\r\n  }, []);\r\n\r\n  const onSubmit = (data) => {\r\n    console.log(data);\r\n    const info = () => {\r\n      message.info(\"This is a normal message\");\r\n    };\r\n    const jobsUrl = \"http://localhost:3001/api/jobs\";\r\n    axios\r\n      .post(jobsUrl, {\r\n        data: {\r\n          title: data.title,\r\n          position: data.position,\r\n          companyName: data.companyName,\r\n          companyLogo: data.companyLogo,\r\n          companyLocation: data.companyLocation,\r\n          url: data.url,\r\n          categoryId: 36,\r\n          typeId: 2,\r\n        },\r\n      })\r\n      .then(function (response) {\r\n        console.log(setJobs(response.data));\r\n        // alert(\"Gracias por postear su trabajo\");\r\n        info();\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n    console.log(data);\r\n  };\r\n\r\n  if (jobType === undefined || jobCategories === undefined) {\r\n    return \"Jobtype esta undefined\";\r\n  }\r\n  return (\r\n    <div id=\"container\" className=\"container\">\r\n      <form id=\"form\" onSubmit={handleSubmit(onSubmit)}>\r\n        <h2 className=\"text-black\">Postea tu trabajo</h2>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Compañía:\"\r\n          name=\"companyName\"\r\n          ref={register}\r\n          id=\"form-input\"\r\n        />\r\n        <div>\r\n          {jobType.map((jobTypex) => {\r\n            return (\r\n              <>\r\n                <label>{jobTypex.name}</label>\r\n                <input type=\"radio\" name={jobTypex.id} ref={register} />\r\n                <br />\r\n              </>\r\n            );\r\n          })}\r\n        </div>\r\n        {/* {errors.Tipo && <p>Debe llenar este campo</p>} */}\r\n        <label>lOGO</label>\r\n        <input\r\n          type=\"file\"\r\n          placeholder=\" Logo (opcional):\"\r\n          name=\"companyLogo\"\r\n          ref={register}\r\n          id=\"form-input\"\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Puesto de trabajo\"\r\n          name=\"position\"\r\n          ref={register}\r\n          id=\"form-input\"\r\n        />\r\n        <div>\r\n          <select className=\"search\">\r\n            <option className=\"card-text\">Busca por categoria</option>\r\n            {jobCategories.map((jobCategory) => {\r\n              return (\r\n                <option value={jobCategory.id} ref={register}>\r\n                  {jobCategory.name}\r\n                </option>\r\n              );\r\n            })}\r\n          </select>\r\n        </div>\r\n        <input\r\n          type=\"text\"\r\n          name=\"companyLocation\"\r\n          ref={register}\r\n          placeholder=\"Ubicacion de la Compañía\"\r\n          id=\"form-input\"\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Url (Compañía):\"\r\n          name=\"url\"\r\n          ref={register}\r\n          id=\"form-input\"\r\n        />\r\n        <div id=\"message\">\r\n          <input\r\n            placeholder=\"Escribe una descripcion para el puesto de trabajo\"\r\n            id=\"form-input\"\r\n            name=\"title\"\r\n            ref={register}\r\n            className=\"text-white\"\r\n          />\r\n        </div>\r\n        <input type=\"submit\" className=\"btn btn-block btn-info button\" />\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\indiana\\Documents\\code\\BolsaEmpleos\\frontend\\src\\components\\navbar\\sideBar.js",["57"],"import React from \"react\";\r\n\r\nexport const sidebarData = [\r\n  {\r\n    tittle: \"Inicio\",\r\n    path: \"/Busqueda\",\r\n    className: \"nav-text\",\r\n  },\r\n  {\r\n    tittle: \"Postea\",\r\n    path: \"/login\",\r\n    className: \"nav-text\",\r\n  },\r\n  {\r\n    tittle: \"Login\",\r\n    path: \"/login\",\r\n    className: \"nav-text\",\r\n  },\r\n];\r\n","C:\\Users\\indiana\\Documents\\code\\BolsaEmpleos\\frontend\\src\\components\\busqueda\\Busqueda.js",["58","59"],"C:\\Users\\indiana\\Documents\\code\\BolsaEmpleos\\frontend\\src\\components\\users\\login.js",["60","61"],"import axios from \"axios\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { FaRegUser } from \"react-icons/fa\";\r\nimport { Button, notification } from \"antd\";\r\nimport \"./users.css\";\r\n\r\nexport default function Login() {\r\n  const history = useHistory();\r\n  const { register, handleSubmit, errors } = useForm();\r\n\r\n  const onSubmit = (data) => {\r\n    const openNotification = () => {\r\n      const args = {\r\n        message: \"Notification Title\",\r\n        description:\r\n          \"I will never close automatically. This is a purposely very very long description that has many many characters and words.\",\r\n        duration: 0,\r\n      };\r\n      notification.open(args);\r\n    };\r\n    let loginUrl = \"http://localhost:3001/api/auth/login\";\r\n    axios\r\n      .post(loginUrl, {\r\n        data: {\r\n          username: data.username,\r\n          password: data.password,\r\n        },\r\n      })\r\n      .then(function (res) {\r\n        console.log(res.data.token);\r\n        localStorage.setItem(\"token\", res.data.token);\r\n        console.log(localStorage.getItem(\"token\"));\r\n        // alert(\"Bienvenido ya puedes postear tu trabajo\");\r\n        document.getElementById(\"notification\").innerHTML = openNotification;\r\n        openNotification();\r\n        // history.push(\"/container\");\r\n      })\r\n      .catch(function (err) {\r\n        console.error(err);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <form class=\"login-box\" onSubmit={handleSubmit(onSubmit)}>\r\n        <div id=\"notification\"></div>\r\n        <FaRegUser className=\"regis-img\" />\r\n        <strong className=\"text-center\">Accede a tu cuenta</strong>\r\n\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Usuario:\"\r\n          name=\"username\"\r\n          ref={register({ required: true })}\r\n        />\r\n\r\n        {\r\n          //prevencion de errores\r\n          errors.usuario &&\r\n            errors.usuario.type === \"required\" &&\r\n            \"Usuario requerido\"\r\n        }\r\n\r\n        <input\r\n          type=\"password\"\r\n          placeholder=\"Password:\"\r\n          name=\"password\"\r\n          ref={register({ required: true })}\r\n        />\r\n        {errors.password &&\r\n          errors.password.type === \"required\" &&\r\n          \"Password requerido\"}\r\n        <input\r\n          type=\"submit\"\r\n          value=\"Acceder\"\r\n          className=\"btn btn-block btn-secondary\"\r\n        />\r\n        <button\r\n          // onClick={() => {\r\n\r\n          // }}\r\n          className=\"btn btn-sm btn-primary\"\r\n        >\r\n          Registrarse\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\indiana\\Documents\\code\\BolsaEmpleos\\frontend\\src\\components\\users\\registro.js",[],"C:\\Users\\indiana\\Documents\\code\\BolsaEmpleos\\frontend\\src\\components\\morejobs\\morejobs.js",[],"C:\\Users\\indiana\\Documents\\code\\BolsaEmpleos\\frontend\\src\\components\\morejobs\\moreJobs.js",[],{"ruleId":"62","severity":1,"message":"63","line":3,"column":10,"nodeType":"64","messageId":"65","endLine":3,"endColumn":20},{"ruleId":"62","severity":1,"message":"66","line":7,"column":27,"nodeType":"64","messageId":"65","endLine":7,"endColumn":33},{"ruleId":"62","severity":1,"message":"67","line":3,"column":22,"nodeType":"64","messageId":"65","endLine":3,"endColumn":40},{"ruleId":"62","severity":1,"message":"68","line":8,"column":19,"nodeType":"64","messageId":"65","endLine":8,"endColumn":29},{"ruleId":"69","severity":1,"message":"70","line":15,"column":13,"nodeType":"71","endLine":15,"endColumn":50},{"ruleId":"72","replacedBy":"73"},{"ruleId":"74","replacedBy":"75"},{"ruleId":"62","severity":1,"message":"76","line":5,"column":19,"nodeType":"64","messageId":"65","endLine":5,"endColumn":25},{"ruleId":"62","severity":1,"message":"77","line":11,"column":35,"nodeType":"64","messageId":"65","endLine":11,"endColumn":41},{"ruleId":"62","severity":1,"message":"78","line":13,"column":10,"nodeType":"64","messageId":"65","endLine":13,"endColumn":14},{"ruleId":"62","severity":1,"message":"79","line":1,"column":8,"nodeType":"64","messageId":"65","endLine":1,"endColumn":13},{"ruleId":"62","severity":1,"message":"63","line":4,"column":10,"nodeType":"64","messageId":"65","endLine":4,"endColumn":20},{"ruleId":"62","severity":1,"message":"80","line":13,"column":9,"nodeType":"64","messageId":"65","endLine":13,"endColumn":16},{"ruleId":"62","severity":1,"message":"76","line":5,"column":10,"nodeType":"64","messageId":"65","endLine":5,"endColumn":16},{"ruleId":"62","severity":1,"message":"80","line":9,"column":9,"nodeType":"64","messageId":"65","endLine":9,"endColumn":16},"no-unused-vars","'Pagination' is defined but never used.","Identifier","unusedVar","'Router' is defined but never used.","'FaLongArrowAltLeft' is defined but never used.","'setSidebar' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-native-reassign",["81"],"no-negated-in-lhs",["82"],"'Button' is defined but never used.","'errors' is assigned a value but never used.","'jobs' is assigned a value but never used.","'React' is defined but never used.","'history' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]